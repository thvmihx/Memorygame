/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package br.com.etecdracena.jogosdigitais.gamememory;

import java.awt.Color;
import java.awt.Container;
import java.awt.GridLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author 23011
 */
public class Telajogo extends javax.swing.JFrame implements ActionListener {

    private Object botaoPrimeiroSelecionado, botaoSegundoSelecionado;
    private JLabel jogadorPontos;
    private Icon imagens[];
    private Container container;
    private String tema;
    private Integer fator, acertos, tentativas;
    private boolean primeiroSelecionado = true;
    private boolean acertou = true;
    private jogoBotao primeiroBotao, segundoBotao, imagensBotao[];
    private Jogador jogador;

    /**
     * Creates new form Telajogo
     */
    public Telajogo() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Telajogo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Telajogo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Telajogo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Telajogo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Telajogo().setVisible(true);
            }
        });
    }

    // Codigo do jogo inicia aqui
    private void escolhaTema(Integer tema) {
        switch (tema) {
            case 1:
                this.tema = "imagens/temas/onepiece/";

                break;
        }
    }

    private void resumojogo() {
        StringBuilder resumo = new StringBuilder();
        resumo.append("Jogador:").append(jogador.pegaNome()).append("\n\n");
        resumo.append("Pontos:").append(jogador.obterPontos()).append("\n\n");
        resumo.append("Tentativas:").append("\n\n");

        JOptionPane.showMessageDialog(null, resumo.toString(), "Resumo do jogo", JOptionPane.INFORMATION_MESSAGE);
        setVisible(false);
    }

    private JPanel painelImagens() {
        JPanel painel = new JPanel();
        GridLayout grid = new GridLayout(fator, fator, 5, 5);
        painel.setLayout(grid);

        int resultFator = fator * fator;
        imagensBotao = new jogoBotao[resultFator];

        for (int cont = 0; cont < resultFator; cont++) {
            imagensBotao[cont] = new jogoBotao(inserirImagemPadrao(), imagens[cont]);
            imagensBotao[cont].addActionListener(this);
            painel.add(imagensBotao[cont]);

        }
        return painel;
    }

    private Icon inserirImagemPadrao() {
        Icon imagemPadrao = new ImageIcon(getClass().getClassLoader()
                .getResource(tema + "fundo.jpg"));
        return imagemPadrao;
    }

    private JPanel paineljogador() {
        jogadorPontos = new JLabel("jogador:" + jogador.pegaNome() + "Pontos:" + jogador.obterPontos());
        JPanel painel = new JPanel();
        painel.setBackground(Color.white);
        painel.add(jogadorPontos);
        return painel;
    }

    private void preparaImagens() {
        Integer posicaoArray, x, y;
        Integer resultFator = (fator * fator) / 2;
        this.imagens = new Icon[resultFator];
        for (x = 0; x < resultFator; x++) {
            this.imagens[x] = new ImageIcon(getClass()
                    .getClassLoader().getResource(tema + (x + 1) + ".png"));
        }
        this.imagens = new Icon[resultFator];

        for (x = 0; x < 2; x++) {
            for (y = 0; y < resultFator; y++) {
                do {
                    posicaoArray = (int) Math.random() * resultFator;
                } while (this.imagens[posicaoArray] != null);
                this.imagens[posicaoArray] = imagens[y];
            }
        }
    }

    @Override                                     
    public void actionPerformed(ActionEvent event) {
        if (primeiroSelecionado) {
            tentativas++;
            if (!acertou) {
                primeiroBotao = (jogoBotao) botaoPrimeiroSelecionado;
                segundoBotao = (jogoBotao) botaoSegundoSelecionado;

                primeiroBotao.setImagemPadrao();
                segundoBotao.setImagemPadrao();
            }
            botaoPrimeiroSelecionado = event.getSource();
            
            primeiroBotao = (jogoBotao) botaoPrimeiroSelecionado;
            primeiroBotao.setImagemBotao();
            primeiroSelecionado = !primeiroSelecionado;
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
